{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "f2d17e25",
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime as dt\n",
    "import pandas as pd\n",
    "from yahoofinancials import YahooFinancials"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "5d9e017c",
   "metadata": {},
   "outputs": [],
   "source": [
    "close_price=pd.DataFrame()\n",
    "end_date=(dt.date.today()).strftime('%Y-%m-%d')\n",
    "start_date=(dt.date.today()-dt.timedelta(31)).strftime('%Y-%m-%d')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "6b263e43",
   "metadata": {},
   "outputs": [],
   "source": [
    "tickers = ['MSFT','AAPL']\n",
    "for ticker in tickers:\n",
    "    yahoo_financials=YahooFinancials(ticker)\n",
    "    json_obj=yahoo_financials.get_historical_price_data('2023-01-01','2023-08-01','daily')\n",
    "    ohlv=json_obj[ticker]['prices']\n",
    "    temp=pd.DataFrame(ohlv)[['formatted_date','adjclose']]\n",
    "    temp.set_index('formatted_date',inplace=True)\n",
    "    temp.dropna(inplace=True)\n",
    "    close_price[ticker]=temp['adjclose']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "f9e4e026",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MSFT</th>\n",
       "      <th>AAPL</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>formatted_date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-01-03</th>\n",
       "      <td>238.460144</td>\n",
       "      <td>124.706833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-01-04</th>\n",
       "      <td>228.029129</td>\n",
       "      <td>125.993095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-01-05</th>\n",
       "      <td>221.270844</td>\n",
       "      <td>124.656975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-01-06</th>\n",
       "      <td>223.878601</td>\n",
       "      <td>129.243622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-01-09</th>\n",
       "      <td>226.058380</td>\n",
       "      <td>129.772079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-25</th>\n",
       "      <td>350.980011</td>\n",
       "      <td>193.619995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-26</th>\n",
       "      <td>337.769989</td>\n",
       "      <td>194.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-27</th>\n",
       "      <td>330.720001</td>\n",
       "      <td>193.220001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-28</th>\n",
       "      <td>338.369995</td>\n",
       "      <td>195.830002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-31</th>\n",
       "      <td>335.920013</td>\n",
       "      <td>196.449997</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>144 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      MSFT        AAPL\n",
       "formatted_date                        \n",
       "2023-01-03      238.460144  124.706833\n",
       "2023-01-04      228.029129  125.993095\n",
       "2023-01-05      221.270844  124.656975\n",
       "2023-01-06      223.878601  129.243622\n",
       "2023-01-09      226.058380  129.772079\n",
       "...                    ...         ...\n",
       "2023-07-25      350.980011  193.619995\n",
       "2023-07-26      337.769989  194.500000\n",
       "2023-07-27      330.720001  193.220001\n",
       "2023-07-28      338.369995  195.830002\n",
       "2023-07-31      335.920013  196.449997\n",
       "\n",
       "[144 rows x 2 columns]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "close_price"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
